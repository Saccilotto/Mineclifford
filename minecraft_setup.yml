---
- name: Setup Minecraft Server
  hosts: minecraft
  become: yes
  vars:
    minecraft_memory: "3G"
    minecraft_dir: "/opt/minecraft"
    minecraft_user: "minecraft"
    import_world: "{{ lookup('env', 'import_world', default='') }}"
    force_version: "{{ lookup('env', 'force_version', default='') }}"
    force_server_type: "{{ lookup('env', 'server_type', default='') }}"
    default_version: "1.22.5"
    server_type: "vanilla"  # Default server type
    # Version-specific URLs for vanilla Minecraft server
    vanilla_url_1_22_5: "https://piston-data.mojang.com/v1/objects/e6ec2f64e6080b9b5d9b471b291c33cc7f509733/server.jar"
    vanilla_url_1_21_4: "https://piston-data.mojang.com/v1/objects/4707d00eb834b446575d89a61a11b5d548d8c001/server.jar"
    # URLs for Paper versions (Note: No 1.22.x versions available for Paper yet)
    paper_url_1_21_5: "https://api.papermc.io/v2/projects/paper/versions/1.21.5/builds/76/downloads/paper-1.21.5-76.jar"
    paper_url_1_21_4: "https://api.papermc.io/v2/projects/paper/versions/1.21.4/builds/229/downloads/paper-1.21.4-229.jar"
    # Latest Paper version to use as fallback
    paper_latest_version: "1.21.5"
    paper_latest_url: "https://api.papermc.io/v2/projects/paper/versions/1.21.5/builds/76/downloads/paper-1.21.5-76.jar"

  tasks:
    # Phase 1: System preparation
    - name: Update apt cache
      apt:
        update_cache: yes
      
    - name: Install required packages
      apt:
        name:
          - screen
          - unzip
          - wget
          - htop
          - file # For mime type detection
        state: present

    - name: Add OpenJDK PPA repository
      apt_repository:
        repo: ppa:openjdk-r/ppa
        state: present
  
    - name: Install Java
      apt:
        name:
          - openjdk-21-jre-headless
      
    - name: Create minecraft user
      user:
        name: "{{ minecraft_user }}"
        system: yes
        home: "{{ minecraft_dir }}"
        shell: /usr/sbin/nologin
        
    - name: Create minecraft directory
      file:
        path: "{{ minecraft_dir }}"
        state: directory
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0755'
    
    # Phase 2: World import and server type detection
    - name: Check if world import is specified
      set_fact:
        do_import: "{{ import_world != '' }}"
      
    - name: Create world directory
      file:
        path: "{{ minecraft_dir }}/world"
        state: directory
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0755'
      when: do_import
      
    - name: Upload world archive
      copy:
        src: "{{ import_world }}"
        dest: "{{ minecraft_dir }}/world.zip"
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0644'
      when: do_import
      
    - name: Extract world archive
      unarchive:
        src: "{{ minecraft_dir }}/world.zip"
        dest: "{{ minecraft_dir }}/world"
        remote_src: yes
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
      when: do_import

    # Server type detection logic for imported worlds
    - name: Check for Bukkit/Paper world files
      find:
        paths: "{{ minecraft_dir }}/world"
        patterns: "bukkit.yml,paper-world.yml"
        recurse: yes
      register: bukkit_files
      when: do_import

    - name: Check level.dat for Bukkit data
      shell: "grep -a 'Bukkit' {{ minecraft_dir }}/world/level.dat 2>/dev/null || echo ''"
      register: bukkit_data_check
      changed_when: false
      when: do_import

    - name: Debug bukkit detection
      debug:
        msg: 
          - "Bukkit files found: {{ bukkit_files.matched if bukkit_files is defined else 'Not checked' }}"
          - "Bukkit data in level.dat: {{ 'Yes' if bukkit_data_check.stdout != '' else 'No' if bukkit_data_check is defined else 'Not checked' }}"
      when: do_import

    - name: Set server type to paper if Bukkit world detected
      set_fact:
        server_type: "paper"
      when: do_import and ((bukkit_files is defined and bukkit_files.matched > 0) or (bukkit_data_check is defined and bukkit_data_check.stdout != ''))

    # Override server type if explicitly specified
    - name: Override server type if explicitly specified
      set_fact:
        server_type: "{{ force_server_type }}"
      when: force_server_type != ''

    - name: Report detected/selected server type
      debug:
        msg: "Using server type: {{ server_type }}"
    
    # Phase 3: Version selection and server download
    - name: Set target version
      set_fact:
        target_version: "{{ default_version }}"

    - name: Override target version if force_version is specified
      set_fact:
        target_version: "{{ force_version }}"
      when: "force_version is defined and force_version != ''"

    # Version compatibility check for Paper
    - name: Check Paper compatibility with requested version
      set_fact:
        is_paper_compatible: "{{ target_version in ['1.21.4', '1.21.5'] }}"
      when: server_type == "paper"

    - name: Warning about Paper compatibility
      debug:
        msg: "WARNING: Paper server does not support version {{ target_version }}. Falling back to latest Paper version ({{ paper_latest_version }})."
      when: server_type == "paper" and not (is_paper_compatible | default(false))

    # Adjust target version for Paper if incompatible
    - name: Adjust target version for incompatible Paper server
      set_fact:
        target_version: "{{ paper_latest_version }}"
      when: server_type == "paper" and not (is_paper_compatible | default(false))

    # Set server URL based on version and server type
    - name: Set server URL for vanilla 1.21.4
      set_fact:
        minecraft_server_url: "{{ vanilla_url_1_21_4 }}"
      when: server_type == "vanilla" and target_version == "1.21.4"

    - name: Set server URL for vanilla 1.22.5
      set_fact:
        minecraft_server_url: "{{ vanilla_url_1_22_5 }}"
      when: server_type == "vanilla" and target_version == "1.22.5"

    - name: Set server URL for paper 1.21.4
      set_fact:
        minecraft_server_url: "{{ paper_url_1_21_4 }}"
      when: server_type == "paper" and target_version == "1.21.4"

    - name: Set server URL for paper 1.21.5
      set_fact:
        minecraft_server_url: "{{ paper_url_1_21_5 }}"
      when: server_type == "paper" and target_version == "1.21.5"

    - name: Set default server URL if version not found
      set_fact:
        minecraft_server_url: "{{ vanilla_url_1_22_5 if server_type == 'vanilla' else paper_latest_url }}"
      when: minecraft_server_url is not defined
        
    - name: Download server jar
      get_url:
        url: "{{ minecraft_server_url }}"
        dest: "{{ minecraft_dir }}/server.jar"
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0755'
    
    # Phase 4: Server configuration
    - name: Configure server properties
      copy:
        dest: "{{ minecraft_dir }}/server.properties"
        content: |
          # World settings
          level-name=world
          gamemode=survival
          difficulty=hard
          hardcore=false
          spawn-protection=16
          max-players=25
          
          # Performance settings
          view-distance=8
          simulation-distance=6
          entity-broadcast-range-percentage=100
          max-tick-time=60000
          
          # Network settings
          server-port=25565
          network-compression-threshold=256
          rate-limit=0
          use-native-transport=true
          
          # Game mechanics
          enable-command-block=true
          allow-nether=true
          max-world-size=29999984
          spawn-npcs=true
          spawn-animals=true
          spawn-monsters=true
          
          # Server appearance
          enforce-whitelist=false
          motd=Mineclifford a Famouso Solutions Server
          
          # Additional performance optimizations
          max-chained-neighbor-updates=1000000
          entity-activation-range-animals=16
          entity-activation-range-monsters=24
          entity-activation-range-villagers=16
          entity-activation-range-flying-monsters=32
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0644'

    # Paper-specific configuration if needed
    - name: Create paper.yml configuration for Paper servers
      copy:
        dest: "{{ minecraft_dir }}/paper.yml"
        content: |
          # Paper server configuration
          verbose: false
          settings:
            chunk-loading:
              min-load-radius: 2
              max-concurrent-sends: 2
              autoconfig-send-distance: true
              target-player-chunk-send-rate: 100
            use-faster-eigencraft-redstone: true
            fix-climbing-bypassing-cramming-rule: true
            use-faster-raid-finder: true
            prevent-moving-into-unloaded-chunks: true
            console:
              enable-brigadier-highlighting: true
              enable-brigadier-completions: true
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0644'
      when: server_type == "paper"
        
    - name: Create start script
      copy:
        dest: "{{ minecraft_dir }}/start.sh"
        content: |
          #!/bin/bash
          cd {{ minecraft_dir }}
          java -Xmx{{ minecraft_memory }} -Xms{{ minecraft_memory }} -jar server.jar nogui
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0755'
        
    - name: Accept EULA
      copy:
        dest: "{{ minecraft_dir }}/eula.txt"
        content: "eula=true"
        owner: "{{ minecraft_user }}"
        group: "{{ minecraft_user }}"
        mode: '0644'
    
    # Phase 5: Service setup and start
    - name: Create systemd service
      copy:
        dest: /etc/systemd/system/minecraft.service
        content: |
          [Unit]
          Description=Minecraft Server ({{ server_type }} {{ target_version }})
          After=network.target

          [Service]
          User={{ minecraft_user }}
          Group={{ minecraft_user }}
          WorkingDirectory={{ minecraft_dir }}
          ExecStart={{ minecraft_dir }}/start.sh
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
        
    - name: Enable and start Minecraft service
      systemd:
        name: minecraft
        enabled: yes
        state: started
        daemon_reload: yes