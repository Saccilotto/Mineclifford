version: '3.8'

services:
  # Java Edition Minecraft Server
  minecraft-java:
    image: itzg/minecraft-server:latest
    environment:
      - EULA=TRUE
      - TYPE=PAPER
      - MEMORY=2G
      - DIFFICULTY=normal
      - MODE=survival
      - MOTD=Mineclifford Java Server
      - OPS={{ minecraft_ops | default('') }}
      - ALLOW_NETHER=true
      - ENABLE_COMMAND_BLOCK=true
      - SPAWN_PROTECTION=0
      - VIEW_DISTANCE=10
      - TZ=America/Sao_Paulo
    ports:
      - "25565:25565"
    volumes:
      - minecraft_java_data:/data
    deploy:
      resources:
        limits:
          memory: 3G
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - minecraft_network

  # Bedrock Edition Minecraft Server
  minecraft-bedrock:
    image: itzg/minecraft-bedrock-server:latest
    environment:
      - EULA=TRUE
      - GAMEMODE=survival
      - DIFFICULTY=normal
      - SERVER_NAME=Mineclifford Bedrock Server
      - LEVEL_NAME=Mineclifford
      - ALLOW_CHEATS=false
      - TZ=America/Sao_Paulo
    ports:
      - "19132:19132/udp"
    volumes:
      - minecraft_bedrock_data:/data
    deploy:
      resources:
        limits:
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    networks:
      - minecraft_network

  # RCON Web Admin
  rcon-web-admin:
    image: itzg/rcon:latest
    ports:
      - "4326:4326"
      - "4327:4327"
    volumes:
      - rcon_web_admin_data:/opt/rcon-web-admin/db
    environment:
      - RWA_PASSWORD={{ rcon_password | default('minecraft') }}
      - RWA_ADMIN=true
    depends_on:
      - minecraft-java
    networks:
      - minecraft_network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - minecraft_network
      - traefik_network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_password | default('admin') }}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - minecraft_network
      - traefik_network

  # Visualizer for Docker Swarm
  visualizer:
    image: dockersamples/visualizer:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8080:8080"
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - traefik_network

  # Minecraft exporter for Prometheus
  minecraft-exporter:
    image: hkubota/minecraft-exporter:latest
    ports:
      - "9150:9150"
    environment:
      - MC_SERVER=minecraft-java
      - MC_PORT=25565
    networks:
      - minecraft_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 86400 --cleanup
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - minecraft_network

networks:
  minecraft_network:
    driver: overlay
  traefik_network:
    external: true

volumes:
  minecraft_java_data:
  minecraft_bedrock_data:
  rcon_web_admin_data:
  prometheus_data:
  grafana_data: